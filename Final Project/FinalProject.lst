;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 7/28/2023 11:45:10 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28EF      	GOTO       239
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00BD      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00BC      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;FinalProject.c,10 :: 		void interrupt()
;FinalProject.c,12 :: 		if(INTF_bit)
0x000B	0x1C8B      	BTFSS      INTF_bit, BitPos(INTF_bit+0)
0x000C	0x2812      	GOTO       L_interrupt0
;FinalProject.c,14 :: 		INTF_bit = 0;                                                             //Acknowledge
0x000D	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;FinalProject.c,15 :: 		count = -1;                                                               //Exit the loop
0x000E	0x30FF      	MOVLW      255
0x000F	0x00BA      	MOVWF      _count
0x0010	0x30FF      	MOVLW      255
0x0011	0x00BB      	MOVWF      _count+1
;FinalProject.c,16 :: 		}
L_interrupt0:
;FinalProject.c,17 :: 		}
L_end_interrupt:
L__interrupt72:
0x0012	0x083C      	MOVF       ___savePCLATH, 0
0x0013	0x008A      	MOVWF      PCLATH
0x0014	0x0E3D      	SWAPF      ___saveSTATUS, 0
0x0015	0x0083      	MOVWF      STATUS
0x0016	0x0EFF      	SWAPF      R15, 1
0x0017	0x0E7F      	SWAPF      R15, 0
0x0018	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0019	0x1283      	BCF        STATUS, 5
0x001A	0x1303      	BCF        STATUS, 6
0x001B	0x0837      	MOVF       ___DoICPAddr+1, 0
0x001C	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x001D	0x0836      	MOVF       ___DoICPAddr, 0
0x001E	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x001F	0x0008      	RETURN
; end of _____DoICP
_Div_16x16_S_L:
;__Lib_Math.c,420 :: 		
;__Lib_Math.c,426 :: 		
0x0020	0x0D71      	RLF        R1, 0
;__Lib_Math.c,427 :: 		
0x0021	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,428 :: 		
0x0022	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,429 :: 		
0x0023	0x0874      	MOVF       R4, 0
;__Lib_Math.c,430 :: 		
0x0024	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,431 :: 		
0x0025	0x0875      	MOVF       R5, 0
;__Lib_Math.c,432 :: 		
0x0026	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,433 :: 		
0x0027	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,434 :: 		
0x0028	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,435 :: 		
0x0029	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,436 :: 		
0x002A	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,438 :: 		
0x002B	0x300F      	MOVLW      15
;__Lib_Math.c,439 :: 		
0x002C	0x00FC      	MOVWF      R12
;__Lib_Math.c,441 :: 		
0x002D	0x0D71      	RLF        R1, 0
;__Lib_Math.c,442 :: 		
0x002E	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,443 :: 		
0x002F	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,444 :: 		
0x0030	0x0874      	MOVF       R4, 0
;__Lib_Math.c,446 :: 		
0x0031	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,447 :: 		
0x0032	0x2839      	GOTO       $+7
;__Lib_Math.c,448 :: 		
0x0033	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,449 :: 		
0x0034	0x0875      	MOVF       R5, 0
;__Lib_Math.c,450 :: 		
0x0035	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,451 :: 		
0x0036	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,452 :: 		
0x0037	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,453 :: 		
0x0038	0x283E      	GOTO       $+6
;__Lib_Math.c,455 :: 		
0x0039	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,456 :: 		
0x003A	0x0875      	MOVF       R5, 0
;__Lib_Math.c,457 :: 		
0x003B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,458 :: 		
0x003C	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,459 :: 		
0x003D	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,461 :: 		
0x003E	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,462 :: 		
0x003F	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,464 :: 		
0x0040	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,465 :: 		
0x0041	0x282D      	GOTO       $-20
;__Lib_Math.c,467 :: 		
0x0042	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,468 :: 		
0x0043	0x284A      	GOTO       $+7
;__Lib_Math.c,469 :: 		
0x0044	0x0874      	MOVF       R4, 0
;__Lib_Math.c,470 :: 		
0x0045	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,471 :: 		
0x0046	0x0875      	MOVF       R5, 0
;__Lib_Math.c,472 :: 		
0x0047	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,473 :: 		
0x0048	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,474 :: 		
0x0049	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,475 :: 		
0x004A	0x0000      	NOP
;__Lib_Math.c,477 :: 		
L_end_Div_16x16_S_L:
0x004B	0x0008      	RETURN
; end of _Div_16x16_S_L
_Div_16x16_S:
;__Lib_Math.c,479 :: 		
;__Lib_Math.c,487 :: 		
0x004C	0x1283      	BCF        STATUS, 5
0x004D	0x1303      	BCF        STATUS, 6
0x004E	0x0874      	MOVF       R4, 0
0x004F	0x3A00      	XORLW      0
0x0050	0x1D03      	BTFSS      STATUS, 2
0x0051	0x285B      	GOTO       L_Div_16x16_S0
;__Lib_Math.c,488 :: 		
0x0052	0x0875      	MOVF       R5, 0
0x0053	0x3A00      	XORLW      0
0x0054	0x1D03      	BTFSS      STATUS, 2
0x0055	0x285B      	GOTO       L_Div_16x16_S1
;__Lib_Math.c,489 :: 		
0x0056	0x30FF      	MOVLW      255
0x0057	0x00F0      	MOVWF      R0
;__Lib_Math.c,490 :: 		
0x0058	0x307F      	MOVLW      127
0x0059	0x00F1      	MOVWF      R1
;__Lib_Math.c,491 :: 		
0x005A	0x28B4      	GOTO       L_end_Div_16x16_S
;__Lib_Math.c,492 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,495 :: 		
0x005B	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,496 :: 		
0x005C	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,497 :: 		
0x005D	0x01FD      	CLRF       R13
;__Lib_Math.c,498 :: 		
0x005E	0x01F9      	CLRF       R9
;__Lib_Math.c,499 :: 		
0x005F	0x01F8      	CLRF       R8
;__Lib_Math.c,500 :: 		
0x0060	0x0871      	MOVF       R1, 0
;__Lib_Math.c,501 :: 		
0x0061	0x0470      	IORWF      R0, 0
;__Lib_Math.c,502 :: 		
0x0062	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,503 :: 		
0x0063	0x3400      	RETLW      0
;__Lib_Math.c,505 :: 		
0x0064	0x0871      	MOVF       R1, 0
;__Lib_Math.c,506 :: 		
0x0065	0x0675      	XORWF      R5, 0
;__Lib_Math.c,507 :: 		
0x0066	0x00FA      	MOVWF      R10
;__Lib_Math.c,508 :: 		
0x0067	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,509 :: 		
0x0068	0x09FD      	COMF       R13, 1
;__Lib_Math.c,511 :: 		
0x0069	0x01FB      	CLRF       R11
;__Lib_Math.c,513 :: 		
0x006A	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,514 :: 		
0x006B	0x2871      	GOTO       $+6
;__Lib_Math.c,516 :: 		
0x006C	0x09F4      	COMF       R4, 1
;__Lib_Math.c,517 :: 		
0x006D	0x09F5      	COMF       R5, 1
;__Lib_Math.c,518 :: 		
0x006E	0x0AF4      	INCF       R4, 1
;__Lib_Math.c,519 :: 		
0x006F	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,520 :: 		
0x0070	0x0AF5      	INCF       R5, 1
;__Lib_Math.c,522 :: 		
0x0071	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,523 :: 		
0x0072	0x2878      	GOTO       $+6
;__Lib_Math.c,525 :: 		
0x0073	0x09F0      	COMF       R0, 1
;__Lib_Math.c,526 :: 		
0x0074	0x09F1      	COMF       R1, 1
;__Lib_Math.c,527 :: 		
0x0075	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,528 :: 		
0x0076	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,529 :: 		
0x0077	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,531 :: 		
0x0078	0x0871      	MOVF       R1, 0
;__Lib_Math.c,532 :: 		
0x0079	0x0475      	IORWF      R5, 0
;__Lib_Math.c,533 :: 		
0x007A	0x00FA      	MOVWF      R10
;__Lib_Math.c,534 :: 		
0x007B	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,535 :: 		
0x007C	0x288D      	GOTO       $+17
;__Lib_Math.c,537 :: 		
0x007D	0x2020      	CALL       _Div_16x16_S_L
;__Lib_Math.c,539 :: 		
0x007E	0x187B      	BTFSC      R11, 0
;__Lib_Math.c,540 :: 		
0x007F	0x28A0      	GOTO       $+33
;__Lib_Math.c,542 :: 		
0x0080	0x1FFD      	BTFSS      R13, 7
;__Lib_Math.c,543 :: 		
0x0081	0x3400      	RETLW      0
;__Lib_Math.c,545 :: 		
0x0082	0x09F0      	COMF       R0, 1
;__Lib_Math.c,546 :: 		
0x0083	0x09F1      	COMF       R1, 1
;__Lib_Math.c,547 :: 		
0x0084	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,548 :: 		
0x0085	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,549 :: 		
0x0086	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,551 :: 		
0x0087	0x09F8      	COMF       R8, 1
;__Lib_Math.c,552 :: 		
0x0088	0x09F9      	COMF       R9, 1
;__Lib_Math.c,553 :: 		
0x0089	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,554 :: 		
0x008A	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,555 :: 		
0x008B	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,557 :: 		
0x008C	0x3400      	RETLW      0
;__Lib_Math.c,559 :: 		
0x008D	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,560 :: 		
0x008E	0x289C      	GOTO       $+14
;__Lib_Math.c,561 :: 		
0x008F	0x1BF1      	BTFSC      R1, 7
;__Lib_Math.c,562 :: 		
0x0090	0x2898      	GOTO       $+8
;__Lib_Math.c,563 :: 		
0x0091	0x0871      	MOVF       R1, 0
;__Lib_Math.c,564 :: 		
0x0092	0x00F9      	MOVWF      R9
;__Lib_Math.c,565 :: 		
0x0093	0x0870      	MOVF       R0, 0
;__Lib_Math.c,566 :: 		
0x0094	0x00F8      	MOVWF      R8
;__Lib_Math.c,567 :: 		
0x0095	0x01F1      	CLRF       R1
;__Lib_Math.c,568 :: 		
0x0096	0x01F0      	CLRF       R0
;__Lib_Math.c,569 :: 		
0x0097	0x2880      	GOTO       $-23
;__Lib_Math.c,570 :: 		
0x0098	0x01F1      	CLRF       R1
;__Lib_Math.c,571 :: 		
0x0099	0x01F0      	CLRF       R0
;__Lib_Math.c,572 :: 		
0x009A	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,573 :: 		
0x009B	0x3400      	RETLW      0
;__Lib_Math.c,575 :: 		
0x009C	0x09F1      	COMF       R1, 1
;__Lib_Math.c,576 :: 		
0x009D	0x09F0      	COMF       R0, 1
;__Lib_Math.c,577 :: 		
0x009E	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,578 :: 		
0x009F	0x287D      	GOTO       $-34
;__Lib_Math.c,580 :: 		
0x00A0	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,581 :: 		
0x00A1	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,582 :: 		
0x00A2	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,583 :: 		
0x00A3	0x0874      	MOVF       R4, 0
;__Lib_Math.c,584 :: 		
0x00A4	0x0278      	SUBWF      R8, 0
;__Lib_Math.c,585 :: 		
0x00A5	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,586 :: 		
0x00A6	0x2880      	GOTO       $-38
;__Lib_Math.c,587 :: 		
0x00A7	0x0875      	MOVF       R5, 0
;__Lib_Math.c,588 :: 		
0x00A8	0x0279      	SUBWF      R9, 0
;__Lib_Math.c,589 :: 		
0x00A9	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,590 :: 		
0x00AA	0x2880      	GOTO       $-42
;__Lib_Math.c,591 :: 		
0x00AB	0x01F9      	CLRF       R9
;__Lib_Math.c,592 :: 		
0x00AC	0x01F8      	CLRF       R8
;__Lib_Math.c,593 :: 		
0x00AD	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,594 :: 		
0x00AE	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,595 :: 		
0x00AF	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,596 :: 		
0x00B0	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,597 :: 		
0x00B1	0x2880      	GOTO       $-49
;__Lib_Math.c,598 :: 		
0x00B2	0x0000      	NOP
;__Lib_Math.c,599 :: 		
0x00B3	0x34FF      	RETLW      255
;__Lib_Math.c,601 :: 		
L_end_Div_16x16_S:
0x00B4	0x0008      	RETURN
; end of _Div_16x16_S
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x00B5	0x2019      	CALL       _____DoICP
0x00B6	0x118A      	BCF        PCLATH, 3
0x00B7	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x00B8	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x00B9	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x00BA	0x0AB6      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x00BB	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x00BC	0x0AB7      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x00BD	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x00BE	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x00BF	0x28B5      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x00C0	0x0008      	RETURN
; end of ___CC2DW
_WestFlasher:
;FinalProject.c,18 :: 		void WestFlasher()
;FinalProject.c,20 :: 		leds = 0b00101000;                                                        //Prepare west street to stop
0x00C1	0x3028      	MOVLW      40
0x00C2	0x1283      	BCF        STATUS, 5
0x00C3	0x1303      	BCF        STATUS, 6
0x00C4	0x0086      	MOVWF      PORTB
;FinalProject.c,21 :: 		if(count)
0x00C5	0x083A      	MOVF       _count, 0
0x00C6	0x043B      	IORWF      _count+1, 0
0x00C7	0x1903      	BTFSC      STATUS, 2
0x00C8	0x28D5      	GOTO       L_WestFlasher1
;FinalProject.c,22 :: 		delay_ms(400);
0x00C9	0x3005      	MOVLW      5
0x00CA	0x00FB      	MOVWF      R11
0x00CB	0x300F      	MOVLW      15
0x00CC	0x00FC      	MOVWF      R12
0x00CD	0x30F1      	MOVLW      241
0x00CE	0x00FD      	MOVWF      R13
L_WestFlasher2:
0x00CF	0x0BFD      	DECFSZ     R13, 1
0x00D0	0x28CF      	GOTO       L_WestFlasher2
0x00D1	0x0BFC      	DECFSZ     R12, 1
0x00D2	0x28CF      	GOTO       L_WestFlasher2
0x00D3	0x0BFB      	DECFSZ     R11, 1
0x00D4	0x28CF      	GOTO       L_WestFlasher2
L_WestFlasher1:
;FinalProject.c,23 :: 		leds = 0b00100000;                                                        //Flashing
0x00D5	0x3020      	MOVLW      32
0x00D6	0x0086      	MOVWF      PORTB
;FinalProject.c,24 :: 		}
L_end_WestFlasher:
0x00D7	0x0008      	RETURN
; end of _WestFlasher
_SouthFlasher:
;FinalProject.c,25 :: 		void SouthFlasher()
;FinalProject.c,27 :: 		leds = 0b01000100;                                                         //Prepare south street to stop
0x00D8	0x3044      	MOVLW      68
0x00D9	0x1283      	BCF        STATUS, 5
0x00DA	0x1303      	BCF        STATUS, 6
0x00DB	0x0086      	MOVWF      PORTB
;FinalProject.c,28 :: 		if(count)
0x00DC	0x083A      	MOVF       _count, 0
0x00DD	0x043B      	IORWF      _count+1, 0
0x00DE	0x1903      	BTFSC      STATUS, 2
0x00DF	0x28EC      	GOTO       L_SouthFlasher3
;FinalProject.c,29 :: 		delay_ms(400);
0x00E0	0x3005      	MOVLW      5
0x00E1	0x00FB      	MOVWF      R11
0x00E2	0x300F      	MOVLW      15
0x00E3	0x00FC      	MOVWF      R12
0x00E4	0x30F1      	MOVLW      241
0x00E5	0x00FD      	MOVWF      R13
L_SouthFlasher4:
0x00E6	0x0BFD      	DECFSZ     R13, 1
0x00E7	0x28E6      	GOTO       L_SouthFlasher4
0x00E8	0x0BFC      	DECFSZ     R12, 1
0x00E9	0x28E6      	GOTO       L_SouthFlasher4
0x00EA	0x0BFB      	DECFSZ     R11, 1
0x00EB	0x28E6      	GOTO       L_SouthFlasher4
L_SouthFlasher3:
;FinalProject.c,30 :: 		leds = 0b00000100;                                                         //Flashing
0x00EC	0x3004      	MOVLW      4
0x00ED	0x0086      	MOVWF      PORTB
;FinalProject.c,31 :: 		}
L_end_SouthFlasher:
0x00EE	0x0008      	RETURN
; end of _SouthFlasher
_main:
0x00EF	0x1283      	BCF        STATUS, 5
0x00F0	0x1303      	BCF        STATUS, 6
0x00F1	0x01A0      	CLRF       _tens
0x00F2	0x01A1      	CLRF       33
0x00F3	0x3010      	MOVLW      16
0x00F4	0x00A2      	MOVWF      34
0x00F5	0x01A3      	CLRF       35
0x00F6	0x3020      	MOVLW      32
0x00F7	0x00A4      	MOVWF      36
0x00F8	0x01A5      	CLRF       37
0x00F9	0x3030      	MOVLW      48
0x00FA	0x00A6      	MOVWF      38
0x00FB	0x01A7      	CLRF       39
0x00FC	0x3040      	MOVLW      64
0x00FD	0x00A8      	MOVWF      40
0x00FE	0x01A9      	CLRF       41
0x00FF	0x3050      	MOVLW      80
0x0100	0x00AA      	MOVWF      42
0x0101	0x01AB      	CLRF       43
0x0102	0x3060      	MOVLW      96
0x0103	0x00AC      	MOVWF      44
0x0104	0x01AD      	CLRF       45
0x0105	0x3070      	MOVLW      112
0x0106	0x00AE      	MOVWF      46
0x0107	0x01AF      	CLRF       47
0x0108	0x3080      	MOVLW      128
0x0109	0x00B0      	MOVWF      48
0x010A	0x01B1      	CLRF       49
0x010B	0x3090      	MOVLW      144
0x010C	0x00B2      	MOVWF      50
0x010D	0x01B3      	CLRF       51
0x010E	0x3001      	MOVLW      1
0x010F	0x00B4      	MOVWF      _south
0x0110	0x01B5      	CLRF       53
;FinalProject.c,32 :: 		void main()
;FinalProject.c,34 :: 		adcon1 = 7;
0x0111	0x3007      	MOVLW      7
0x0112	0x1683      	BSF        STATUS, 5
0x0113	0x009F      	MOVWF      ADCON1
;FinalProject.c,35 :: 		trisa = trisb = trisc = trisd = 0;
0x0114	0x0188      	CLRF       TRISD
0x0115	0x0808      	MOVF       TRISD, 0
0x0116	0x0087      	MOVWF      TRISC
0x0117	0x0807      	MOVF       TRISC, 0
0x0118	0x0086      	MOVWF      TRISB
0x0119	0x0806      	MOVF       TRISB, 0
0x011A	0x0085      	MOVWF      TRISA
;FinalProject.c,36 :: 		trisa.B4 = trisb.B0 = 1;
0x011B	0x1406      	BSF        TRISB, 0
0x011C	0x1806      	BTFSC      TRISB, 0
0x011D	0x2920      	GOTO       L__main76
0x011E	0x1205      	BCF        TRISA, 4
0x011F	0x2921      	GOTO       L__main77
L__main76:
0x0120	0x1605      	BSF        TRISA, 4
L__main77:
;FinalProject.c,37 :: 		GIE_bit = 1;
0x0121	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;FinalProject.c,38 :: 		INTE_bit = 1;
0x0122	0x160B      	BSF        INTE_bit, BitPos(INTE_bit+0)
;FinalProject.c,39 :: 		INTEDG_bit = 1;                                                             //Rising Edge
0x0123	0x1701      	BSF        INTEDG_bit, BitPos(INTEDG_bit+0)
;FinalProject.c,40 :: 		NOT_RBPU_bit = 0;
0x0124	0x1381      	BCF        NOT_RBPU_bit, BitPos(NOT_RBPU_bit+0)
;FinalProject.c,41 :: 		leds = south_seg = west_Seg = 0;
0x0125	0x1283      	BCF        STATUS, 5
0x0126	0x0188      	CLRF       PORTD
0x0127	0x0808      	MOVF       PORTD, 0
0x0128	0x0087      	MOVWF      PORTC
0x0129	0x0807      	MOVF       PORTC, 0
0x012A	0x0086      	MOVWF      PORTB
;FinalProject.c,42 :: 		if(manual)
0x012B	0x1C06      	BTFSS      PORTB, 0
0x012C	0x292E      	GOTO       L_main5
;FinalProject.c,43 :: 		goto Manual;
0x012D	0x2ABA      	GOTO       ___main_Manual
L_main5:
;FinalProject.c,46 :: 		Automatic:
___main_Automatic:
;FinalProject.c,47 :: 		if(south)
0x012E	0x0834      	MOVF       _south, 0
0x012F	0x0435      	IORWF      _south+1, 0
0x0130	0x1903      	BTFSC      STATUS, 2
0x0131	0x29F0      	GOTO       L_main7
;FinalProject.c,49 :: 		leds = 0b10000100;                                                  //Run south street(Green)
0x0132	0x3084      	MOVLW      132
0x0133	0x0086      	MOVWF      PORTB
;FinalProject.c,50 :: 		SEG_E = 0b01111;
0x0134	0x300F      	MOVLW      15
0x0135	0x0085      	MOVWF      PORTA
;FinalProject.c,51 :: 		for(count = 15 ; count >= 0 ; count --)
0x0136	0x300F      	MOVLW      15
0x0137	0x00BA      	MOVWF      _count
0x0138	0x3000      	MOVLW      0
0x0139	0x00BB      	MOVWF      _count+1
L_main8:
0x013A	0x3080      	MOVLW      128
0x013B	0x063B      	XORWF      _count+1, 0
0x013C	0x00F0      	MOVWF      R0
0x013D	0x3080      	MOVLW      128
0x013E	0x0270      	SUBWF      R0, 0
0x013F	0x1D03      	BTFSS      STATUS, 2
0x0140	0x2943      	GOTO       L__main78
0x0141	0x3000      	MOVLW      0
0x0142	0x023A      	SUBWF      _count, 0
L__main78:
0x0143	0x1C03      	BTFSS      STATUS, 0
0x0144	0x29EF      	GOTO       L_main9
;FinalProject.c,53 :: 		west_Seg = tens[count / 10] + count % 10;                        //Red LED counter(West)
0x0145	0x300A      	MOVLW      10
0x0146	0x00F4      	MOVWF      R4
0x0147	0x3000      	MOVLW      0
0x0148	0x00F5      	MOVWF      R4+1
0x0149	0x083A      	MOVF       _count, 0
0x014A	0x00F0      	MOVWF      R0
0x014B	0x083B      	MOVF       _count+1, 0
0x014C	0x00F1      	MOVWF      R0+1
0x014D	0x204C      	CALL       _Div_16x16_S
0x014E	0x0870      	MOVF       R0, 0
0x014F	0x00F2      	MOVWF      R2
0x0150	0x0871      	MOVF       R0+1, 0
0x0151	0x00F3      	MOVWF      R2+1
0x0152	0x0DF2      	RLF        R2, 1
0x0153	0x0DF3      	RLF        R2+1, 1
0x0154	0x1072      	BCF        R2, 0
0x0155	0x0872      	MOVF       R2, 0
0x0156	0x3E20      	ADDLW      _tens
0x0157	0x0084      	MOVWF      FSR
0x0158	0x300A      	MOVLW      10
0x0159	0x00F4      	MOVWF      R4
0x015A	0x3000      	MOVLW      0
0x015B	0x00F5      	MOVWF      R4+1
0x015C	0x083A      	MOVF       _count, 0
0x015D	0x00F0      	MOVWF      R0
0x015E	0x083B      	MOVF       _count+1, 0
0x015F	0x00F1      	MOVWF      R0+1
0x0160	0x204C      	CALL       _Div_16x16_S
0x0161	0x0878      	MOVF       R8, 0
0x0162	0x00F0      	MOVWF      R0
0x0163	0x0879      	MOVF       R8+1, 0
0x0164	0x00F1      	MOVWF      R0+1
0x0165	0x0870      	MOVF       R0, 0
0x0166	0x0700      	ADDWF      INDF, 0
0x0167	0x0088      	MOVWF      PORTD
;FinalProject.c,54 :: 		if(count - 3 > 0)
0x0168	0x3003      	MOVLW      3
0x0169	0x023A      	SUBWF      _count, 0
0x016A	0x00F1      	MOVWF      R1
0x016B	0x3000      	MOVLW      0
0x016C	0x1C03      	BTFSS      STATUS, 0
0x016D	0x3E01      	ADDLW      1
0x016E	0x023B      	SUBWF      _count+1, 0
0x016F	0x00F2      	MOVWF      R1+1
0x0170	0x3080      	MOVLW      128
0x0171	0x00F0      	MOVWF      R0
0x0172	0x3080      	MOVLW      128
0x0173	0x0672      	XORWF      R1+1, 0
0x0174	0x0270      	SUBWF      R0, 0
0x0175	0x1D03      	BTFSS      STATUS, 2
0x0176	0x2979      	GOTO       L__main79
0x0177	0x0871      	MOVF       R1, 0
0x0178	0x3C00      	SUBLW      0
L__main79:
0x0179	0x1803      	BTFSC      STATUS, 0
0x017A	0x29C5      	GOTO       L_main11
;FinalProject.c,56 :: 		south_seg = tens[(count-3) / 10] + (count-3) % 10;             //Green LED counter(South)
0x017B	0x3003      	MOVLW      3
0x017C	0x023A      	SUBWF      _count, 0
0x017D	0x00BE      	MOVWF      FLOC__main
0x017E	0x3000      	MOVLW      0
0x017F	0x1C03      	BTFSS      STATUS, 0
0x0180	0x3E01      	ADDLW      1
0x0181	0x023B      	SUBWF      _count+1, 0
0x0182	0x00BF      	MOVWF      FLOC__main+1
0x0183	0x300A      	MOVLW      10
0x0184	0x00F4      	MOVWF      R4
0x0185	0x3000      	MOVLW      0
0x0186	0x00F5      	MOVWF      R4+1
0x0187	0x083E      	MOVF       FLOC__main, 0
0x0188	0x00F0      	MOVWF      R0
0x0189	0x083F      	MOVF       FLOC__main+1, 0
0x018A	0x00F1      	MOVWF      R0+1
0x018B	0x204C      	CALL       _Div_16x16_S
0x018C	0x0870      	MOVF       R0, 0
0x018D	0x00F2      	MOVWF      R2
0x018E	0x0871      	MOVF       R0+1, 0
0x018F	0x00F3      	MOVWF      R2+1
0x0190	0x0DF2      	RLF        R2, 1
0x0191	0x0DF3      	RLF        R2+1, 1
0x0192	0x1072      	BCF        R2, 0
0x0193	0x0872      	MOVF       R2, 0
0x0194	0x3E20      	ADDLW      _tens
0x0195	0x0084      	MOVWF      FSR
0x0196	0x300A      	MOVLW      10
0x0197	0x00F4      	MOVWF      R4
0x0198	0x3000      	MOVLW      0
0x0199	0x00F5      	MOVWF      R4+1
0x019A	0x083E      	MOVF       FLOC__main, 0
0x019B	0x00F0      	MOVWF      R0
0x019C	0x083F      	MOVF       FLOC__main+1, 0
0x019D	0x00F1      	MOVWF      R0+1
0x019E	0x204C      	CALL       _Div_16x16_S
0x019F	0x0878      	MOVF       R8, 0
0x01A0	0x00F0      	MOVWF      R0
0x01A1	0x0879      	MOVF       R8+1, 0
0x01A2	0x00F1      	MOVWF      R0+1
0x01A3	0x0870      	MOVF       R0, 0
0x01A4	0x0700      	ADDWF      INDF, 0
0x01A5	0x0087      	MOVWF      PORTC
;FinalProject.c,57 :: 		for(delay = 0 ; delay<1000 && !manual ; delay ++)
0x01A6	0x01B8      	CLRF       _delay
0x01A7	0x01B9      	CLRF       _delay+1
L_main12:
0x01A8	0x3080      	MOVLW      128
0x01A9	0x0639      	XORWF      _delay+1, 0
0x01AA	0x00F0      	MOVWF      R0
0x01AB	0x3080      	MOVLW      128
0x01AC	0x3A03      	XORLW      3
0x01AD	0x0270      	SUBWF      R0, 0
0x01AE	0x1D03      	BTFSS      STATUS, 2
0x01AF	0x29B2      	GOTO       L__main80
0x01B0	0x30E8      	MOVLW      232
0x01B1	0x0238      	SUBWF      _delay, 0
L__main80:
0x01B2	0x1803      	BTFSC      STATUS, 0
0x01B3	0x29C4      	GOTO       L_main13
0x01B4	0x1806      	BTFSC      PORTB, 0
0x01B5	0x29C4      	GOTO       L_main13
L__main70:
;FinalProject.c,58 :: 		delay_ms(1);
0x01B6	0x3003      	MOVLW      3
0x01B7	0x00FC      	MOVWF      R12
0x01B8	0x3097      	MOVLW      151
0x01B9	0x00FD      	MOVWF      R13
L_main17:
0x01BA	0x0BFD      	DECFSZ     R13, 1
0x01BB	0x29BA      	GOTO       L_main17
0x01BC	0x0BFC      	DECFSZ     R12, 1
0x01BD	0x29BA      	GOTO       L_main17
0x01BE	0x0000      	NOP
0x01BF	0x0000      	NOP
;FinalProject.c,57 :: 		for(delay = 0 ; delay<1000 && !manual ; delay ++)
0x01C0	0x0AB8      	INCF       _delay, 1
0x01C1	0x1903      	BTFSC      STATUS, 2
0x01C2	0x0AB9      	INCF       _delay+1, 1
;FinalProject.c,58 :: 		delay_ms(1);
0x01C3	0x29A8      	GOTO       L_main12
L_main13:
;FinalProject.c,59 :: 		}
0x01C4	0x29EA      	GOTO       L_main18
L_main11:
;FinalProject.c,62 :: 		south_seg = count;                                             //Yellow LED counter(South)
0x01C5	0x083A      	MOVF       _count, 0
0x01C6	0x0087      	MOVWF      PORTC
;FinalProject.c,63 :: 		SouthFlasher();                                                //Flashing with delay 400ms
0x01C7	0x20D8      	CALL       _SouthFlasher
;FinalProject.c,64 :: 		if(count)
0x01C8	0x083A      	MOVF       _count, 0
0x01C9	0x043B      	IORWF      _count+1, 0
0x01CA	0x1903      	BTFSC      STATUS, 2
0x01CB	0x29EA      	GOTO       L_main19
;FinalProject.c,65 :: 		for(delay = 0 ; delay<600 && !manual ; delay ++)
0x01CC	0x01B8      	CLRF       _delay
0x01CD	0x01B9      	CLRF       _delay+1
L_main20:
0x01CE	0x3080      	MOVLW      128
0x01CF	0x0639      	XORWF      _delay+1, 0
0x01D0	0x00F0      	MOVWF      R0
0x01D1	0x3080      	MOVLW      128
0x01D2	0x3A02      	XORLW      2
0x01D3	0x0270      	SUBWF      R0, 0
0x01D4	0x1D03      	BTFSS      STATUS, 2
0x01D5	0x29D8      	GOTO       L__main81
0x01D6	0x3058      	MOVLW      88
0x01D7	0x0238      	SUBWF      _delay, 0
L__main81:
0x01D8	0x1803      	BTFSC      STATUS, 0
0x01D9	0x29EA      	GOTO       L_main21
0x01DA	0x1806      	BTFSC      PORTB, 0
0x01DB	0x29EA      	GOTO       L_main21
L__main69:
;FinalProject.c,66 :: 		delay_ms(1);                                           //delay 600ms
0x01DC	0x3003      	MOVLW      3
0x01DD	0x00FC      	MOVWF      R12
0x01DE	0x3097      	MOVLW      151
0x01DF	0x00FD      	MOVWF      R13
L_main25:
0x01E0	0x0BFD      	DECFSZ     R13, 1
0x01E1	0x29E0      	GOTO       L_main25
0x01E2	0x0BFC      	DECFSZ     R12, 1
0x01E3	0x29E0      	GOTO       L_main25
0x01E4	0x0000      	NOP
0x01E5	0x0000      	NOP
;FinalProject.c,65 :: 		for(delay = 0 ; delay<600 && !manual ; delay ++)
0x01E6	0x0AB8      	INCF       _delay, 1
0x01E7	0x1903      	BTFSC      STATUS, 2
0x01E8	0x0AB9      	INCF       _delay+1, 1
;FinalProject.c,66 :: 		delay_ms(1);                                           //delay 600ms
0x01E9	0x29CE      	GOTO       L_main20
L_main21:
L_main19:
;FinalProject.c,67 :: 		}
L_main18:
;FinalProject.c,51 :: 		for(count = 15 ; count >= 0 ; count --)
0x01EA	0x3001      	MOVLW      1
0x01EB	0x02BA      	SUBWF      _count, 1
0x01EC	0x1C03      	BTFSS      STATUS, 0
0x01ED	0x03BB      	DECF       _count+1, 1
;FinalProject.c,68 :: 		}
0x01EE	0x293A      	GOTO       L_main8
L_main9:
;FinalProject.c,69 :: 		}
0x01EF	0x2AAD      	GOTO       L_main26
L_main7:
;FinalProject.c,72 :: 		leds = 0b00110000;                                                  //Run west street(Green)
0x01F0	0x3030      	MOVLW      48
0x01F1	0x0086      	MOVWF      PORTB
;FinalProject.c,73 :: 		SEG_E = 0b01111;
0x01F2	0x300F      	MOVLW      15
0x01F3	0x0085      	MOVWF      PORTA
;FinalProject.c,74 :: 		for(count = 23 ; count >= 0 ; count --)
0x01F4	0x3017      	MOVLW      23
0x01F5	0x00BA      	MOVWF      _count
0x01F6	0x3000      	MOVLW      0
0x01F7	0x00BB      	MOVWF      _count+1
L_main27:
0x01F8	0x3080      	MOVLW      128
0x01F9	0x063B      	XORWF      _count+1, 0
0x01FA	0x00F0      	MOVWF      R0
0x01FB	0x3080      	MOVLW      128
0x01FC	0x0270      	SUBWF      R0, 0
0x01FD	0x1D03      	BTFSS      STATUS, 2
0x01FE	0x2A01      	GOTO       L__main82
0x01FF	0x3000      	MOVLW      0
0x0200	0x023A      	SUBWF      _count, 0
L__main82:
0x0201	0x1C03      	BTFSS      STATUS, 0
0x0202	0x2AAD      	GOTO       L_main28
;FinalProject.c,76 :: 		south_seg = tens[count / 10] + count % 10;                       //Red LED counter(South)
0x0203	0x300A      	MOVLW      10
0x0204	0x00F4      	MOVWF      R4
0x0205	0x3000      	MOVLW      0
0x0206	0x00F5      	MOVWF      R4+1
0x0207	0x083A      	MOVF       _count, 0
0x0208	0x00F0      	MOVWF      R0
0x0209	0x083B      	MOVF       _count+1, 0
0x020A	0x00F1      	MOVWF      R0+1
0x020B	0x204C      	CALL       _Div_16x16_S
0x020C	0x0870      	MOVF       R0, 0
0x020D	0x00F2      	MOVWF      R2
0x020E	0x0871      	MOVF       R0+1, 0
0x020F	0x00F3      	MOVWF      R2+1
0x0210	0x0DF2      	RLF        R2, 1
0x0211	0x0DF3      	RLF        R2+1, 1
0x0212	0x1072      	BCF        R2, 0
0x0213	0x0872      	MOVF       R2, 0
0x0214	0x3E20      	ADDLW      _tens
0x0215	0x0084      	MOVWF      FSR
0x0216	0x300A      	MOVLW      10
0x0217	0x00F4      	MOVWF      R4
0x0218	0x3000      	MOVLW      0
0x0219	0x00F5      	MOVWF      R4+1
0x021A	0x083A      	MOVF       _count, 0
0x021B	0x00F0      	MOVWF      R0
0x021C	0x083B      	MOVF       _count+1, 0
0x021D	0x00F1      	MOVWF      R0+1
0x021E	0x204C      	CALL       _Div_16x16_S
0x021F	0x0878      	MOVF       R8, 0
0x0220	0x00F0      	MOVWF      R0
0x0221	0x0879      	MOVF       R8+1, 0
0x0222	0x00F1      	MOVWF      R0+1
0x0223	0x0870      	MOVF       R0, 0
0x0224	0x0700      	ADDWF      INDF, 0
0x0225	0x0087      	MOVWF      PORTC
;FinalProject.c,77 :: 		if(count - 3 > 0)
0x0226	0x3003      	MOVLW      3
0x0227	0x023A      	SUBWF      _count, 0
0x0228	0x00F1      	MOVWF      R1
0x0229	0x3000      	MOVLW      0
0x022A	0x1C03      	BTFSS      STATUS, 0
0x022B	0x3E01      	ADDLW      1
0x022C	0x023B      	SUBWF      _count+1, 0
0x022D	0x00F2      	MOVWF      R1+1
0x022E	0x3080      	MOVLW      128
0x022F	0x00F0      	MOVWF      R0
0x0230	0x3080      	MOVLW      128
0x0231	0x0672      	XORWF      R1+1, 0
0x0232	0x0270      	SUBWF      R0, 0
0x0233	0x1D03      	BTFSS      STATUS, 2
0x0234	0x2A37      	GOTO       L__main83
0x0235	0x0871      	MOVF       R1, 0
0x0236	0x3C00      	SUBLW      0
L__main83:
0x0237	0x1803      	BTFSC      STATUS, 0
0x0238	0x2A83      	GOTO       L_main30
;FinalProject.c,79 :: 		west_Seg = tens[(count-3) / 10] + (count-3) % 10;              //Green LED counter(west)
0x0239	0x3003      	MOVLW      3
0x023A	0x023A      	SUBWF      _count, 0
0x023B	0x00BE      	MOVWF      FLOC__main
0x023C	0x3000      	MOVLW      0
0x023D	0x1C03      	BTFSS      STATUS, 0
0x023E	0x3E01      	ADDLW      1
0x023F	0x023B      	SUBWF      _count+1, 0
0x0240	0x00BF      	MOVWF      FLOC__main+1
0x0241	0x300A      	MOVLW      10
0x0242	0x00F4      	MOVWF      R4
0x0243	0x3000      	MOVLW      0
0x0244	0x00F5      	MOVWF      R4+1
0x0245	0x083E      	MOVF       FLOC__main, 0
0x0246	0x00F0      	MOVWF      R0
0x0247	0x083F      	MOVF       FLOC__main+1, 0
0x0248	0x00F1      	MOVWF      R0+1
0x0249	0x204C      	CALL       _Div_16x16_S
0x024A	0x0870      	MOVF       R0, 0
0x024B	0x00F2      	MOVWF      R2
0x024C	0x0871      	MOVF       R0+1, 0
0x024D	0x00F3      	MOVWF      R2+1
0x024E	0x0DF2      	RLF        R2, 1
0x024F	0x0DF3      	RLF        R2+1, 1
0x0250	0x1072      	BCF        R2, 0
0x0251	0x0872      	MOVF       R2, 0
0x0252	0x3E20      	ADDLW      _tens
0x0253	0x0084      	MOVWF      FSR
0x0254	0x300A      	MOVLW      10
0x0255	0x00F4      	MOVWF      R4
0x0256	0x3000      	MOVLW      0
0x0257	0x00F5      	MOVWF      R4+1
0x0258	0x083E      	MOVF       FLOC__main, 0
0x0259	0x00F0      	MOVWF      R0
0x025A	0x083F      	MOVF       FLOC__main+1, 0
0x025B	0x00F1      	MOVWF      R0+1
0x025C	0x204C      	CALL       _Div_16x16_S
0x025D	0x0878      	MOVF       R8, 0
0x025E	0x00F0      	MOVWF      R0
0x025F	0x0879      	MOVF       R8+1, 0
0x0260	0x00F1      	MOVWF      R0+1
0x0261	0x0870      	MOVF       R0, 0
0x0262	0x0700      	ADDWF      INDF, 0
0x0263	0x0088      	MOVWF      PORTD
;FinalProject.c,80 :: 		for(delay = 0 ; delay<1000 && !manual ; delay ++)
0x0264	0x01B8      	CLRF       _delay
0x0265	0x01B9      	CLRF       _delay+1
L_main31:
0x0266	0x3080      	MOVLW      128
0x0267	0x0639      	XORWF      _delay+1, 0
0x0268	0x00F0      	MOVWF      R0
0x0269	0x3080      	MOVLW      128
0x026A	0x3A03      	XORLW      3
0x026B	0x0270      	SUBWF      R0, 0
0x026C	0x1D03      	BTFSS      STATUS, 2
0x026D	0x2A70      	GOTO       L__main84
0x026E	0x30E8      	MOVLW      232
0x026F	0x0238      	SUBWF      _delay, 0
L__main84:
0x0270	0x1803      	BTFSC      STATUS, 0
0x0271	0x2A82      	GOTO       L_main32
0x0272	0x1806      	BTFSC      PORTB, 0
0x0273	0x2A82      	GOTO       L_main32
L__main68:
;FinalProject.c,81 :: 		delay_ms(1);
0x0274	0x3003      	MOVLW      3
0x0275	0x00FC      	MOVWF      R12
0x0276	0x3097      	MOVLW      151
0x0277	0x00FD      	MOVWF      R13
L_main36:
0x0278	0x0BFD      	DECFSZ     R13, 1
0x0279	0x2A78      	GOTO       L_main36
0x027A	0x0BFC      	DECFSZ     R12, 1
0x027B	0x2A78      	GOTO       L_main36
0x027C	0x0000      	NOP
0x027D	0x0000      	NOP
;FinalProject.c,80 :: 		for(delay = 0 ; delay<1000 && !manual ; delay ++)
0x027E	0x0AB8      	INCF       _delay, 1
0x027F	0x1903      	BTFSC      STATUS, 2
0x0280	0x0AB9      	INCF       _delay+1, 1
;FinalProject.c,81 :: 		delay_ms(1);
0x0281	0x2A66      	GOTO       L_main31
L_main32:
;FinalProject.c,82 :: 		}
0x0282	0x2AA8      	GOTO       L_main37
L_main30:
;FinalProject.c,85 :: 		west_Seg = count;                                              //Yellow LED counter(west)
0x0283	0x083A      	MOVF       _count, 0
0x0284	0x0088      	MOVWF      PORTD
;FinalProject.c,86 :: 		WestFlasher();                                                 //Flashing with delay 400ms
0x0285	0x20C1      	CALL       _WestFlasher
;FinalProject.c,87 :: 		if(count)
0x0286	0x083A      	MOVF       _count, 0
0x0287	0x043B      	IORWF      _count+1, 0
0x0288	0x1903      	BTFSC      STATUS, 2
0x0289	0x2AA8      	GOTO       L_main38
;FinalProject.c,88 :: 		for(delay = 0 ; delay<600 && !manual ; delay ++)
0x028A	0x01B8      	CLRF       _delay
0x028B	0x01B9      	CLRF       _delay+1
L_main39:
0x028C	0x3080      	MOVLW      128
0x028D	0x0639      	XORWF      _delay+1, 0
0x028E	0x00F0      	MOVWF      R0
0x028F	0x3080      	MOVLW      128
0x0290	0x3A02      	XORLW      2
0x0291	0x0270      	SUBWF      R0, 0
0x0292	0x1D03      	BTFSS      STATUS, 2
0x0293	0x2A96      	GOTO       L__main85
0x0294	0x3058      	MOVLW      88
0x0295	0x0238      	SUBWF      _delay, 0
L__main85:
0x0296	0x1803      	BTFSC      STATUS, 0
0x0297	0x2AA8      	GOTO       L_main40
0x0298	0x1806      	BTFSC      PORTB, 0
0x0299	0x2AA8      	GOTO       L_main40
L__main67:
;FinalProject.c,89 :: 		delay_ms(1);                                           //delay 600ms
0x029A	0x3003      	MOVLW      3
0x029B	0x00FC      	MOVWF      R12
0x029C	0x3097      	MOVLW      151
0x029D	0x00FD      	MOVWF      R13
L_main44:
0x029E	0x0BFD      	DECFSZ     R13, 1
0x029F	0x2A9E      	GOTO       L_main44
0x02A0	0x0BFC      	DECFSZ     R12, 1
0x02A1	0x2A9E      	GOTO       L_main44
0x02A2	0x0000      	NOP
0x02A3	0x0000      	NOP
;FinalProject.c,88 :: 		for(delay = 0 ; delay<600 && !manual ; delay ++)
0x02A4	0x0AB8      	INCF       _delay, 1
0x02A5	0x1903      	BTFSC      STATUS, 2
0x02A6	0x0AB9      	INCF       _delay+1, 1
;FinalProject.c,89 :: 		delay_ms(1);                                           //delay 600ms
0x02A7	0x2A8C      	GOTO       L_main39
L_main40:
L_main38:
;FinalProject.c,90 :: 		}
L_main37:
;FinalProject.c,74 :: 		for(count = 23 ; count >= 0 ; count --)
0x02A8	0x3001      	MOVLW      1
0x02A9	0x02BA      	SUBWF      _count, 1
0x02AA	0x1C03      	BTFSS      STATUS, 0
0x02AB	0x03BB      	DECF       _count+1, 1
;FinalProject.c,91 :: 		}
0x02AC	0x29F8      	GOTO       L_main27
L_main28:
;FinalProject.c,92 :: 		}
L_main26:
;FinalProject.c,93 :: 		if(manual)
0x02AD	0x1C06      	BTFSS      PORTB, 0
0x02AE	0x2AB0      	GOTO       L_main45
;FinalProject.c,94 :: 		goto Manual;
0x02AF	0x2ABA      	GOTO       ___main_Manual
L_main45:
;FinalProject.c,97 :: 		south = !south;                                                     //Exchanging pathes
0x02B0	0x0834      	MOVF       _south, 0
0x02B1	0x0435      	IORWF      _south+1, 0
0x02B2	0x3001      	MOVLW      1
0x02B3	0x1D03      	BTFSS      STATUS, 2
0x02B4	0x3000      	MOVLW      0
0x02B5	0x00B4      	MOVWF      _south
0x02B6	0x00B5      	MOVWF      _south+1
0x02B7	0x3000      	MOVLW      0
0x02B8	0x00B5      	MOVWF      _south+1
;FinalProject.c,98 :: 		goto Automatic;
0x02B9	0x292E      	GOTO       ___main_Automatic
;FinalProject.c,101 :: 		Manual:
___main_Manual:
;FinalProject.c,102 :: 		west_Seg = south_seg = SEG_E = 0;
0x02BA	0x0185      	CLRF       PORTA
0x02BB	0x0805      	MOVF       PORTA, 0
0x02BC	0x0087      	MOVWF      PORTC
0x02BD	0x0807      	MOVF       PORTC, 0
0x02BE	0x0088      	MOVWF      PORTD
;FinalProject.c,103 :: 		if(south)
0x02BF	0x0834      	MOVF       _south, 0
0x02C0	0x0435      	IORWF      _south+1, 0
0x02C1	0x1903      	BTFSC      STATUS, 2
0x02C2	0x2AFE      	GOTO       L_main47
;FinalProject.c,105 :: 		leds = 0b10000100;                                                  //Run south street
0x02C3	0x3084      	MOVLW      132
0x02C4	0x0086      	MOVWF      PORTB
;FinalProject.c,106 :: 		if(porta.B4)
0x02C5	0x1E05      	BTFSS      PORTA, 4
0x02C6	0x2AFD      	GOTO       L_main48
;FinalProject.c,108 :: 		while(porta.B4);
L_main49:
0x02C7	0x1E05      	BTFSS      PORTA, 4
0x02C8	0x2ACA      	GOTO       L_main50
0x02C9	0x2AC7      	GOTO       L_main49
L_main50:
;FinalProject.c,109 :: 		SEG_E = 0b01100;                                                //Enable South street segments
0x02CA	0x300C      	MOVLW      12
0x02CB	0x0085      	MOVWF      PORTA
;FinalProject.c,110 :: 		for(count = 3 ; count >= 0 ; count --)
0x02CC	0x3003      	MOVLW      3
0x02CD	0x00BA      	MOVWF      _count
0x02CE	0x3000      	MOVLW      0
0x02CF	0x00BB      	MOVWF      _count+1
L_main51:
0x02D0	0x3080      	MOVLW      128
0x02D1	0x063B      	XORWF      _count+1, 0
0x02D2	0x00F0      	MOVWF      R0
0x02D3	0x3080      	MOVLW      128
0x02D4	0x0270      	SUBWF      R0, 0
0x02D5	0x1D03      	BTFSS      STATUS, 2
0x02D6	0x2AD9      	GOTO       L__main86
0x02D7	0x3000      	MOVLW      0
0x02D8	0x023A      	SUBWF      _count, 0
L__main86:
0x02D9	0x1C03      	BTFSS      STATUS, 0
0x02DA	0x2AF4      	GOTO       L_main52
;FinalProject.c,112 :: 		south_seg = count;                                         //Yellow LED counter(South)
0x02DB	0x083A      	MOVF       _count, 0
0x02DC	0x0087      	MOVWF      PORTC
;FinalProject.c,113 :: 		SouthFlasher();
0x02DD	0x20D8      	CALL       _SouthFlasher
;FinalProject.c,114 :: 		if(count)
0x02DE	0x083A      	MOVF       _count, 0
0x02DF	0x043B      	IORWF      _count+1, 0
0x02E0	0x1903      	BTFSC      STATUS, 2
0x02E1	0x2AEF      	GOTO       L_main54
;FinalProject.c,115 :: 		delay_ms(wait600);
0x02E2	0x3007      	MOVLW      7
0x02E3	0x00FB      	MOVWF      R11
0x02E4	0x3017      	MOVLW      23
0x02E5	0x00FC      	MOVWF      R12
0x02E6	0x306A      	MOVLW      106
0x02E7	0x00FD      	MOVWF      R13
L_main55:
0x02E8	0x0BFD      	DECFSZ     R13, 1
0x02E9	0x2AE8      	GOTO       L_main55
0x02EA	0x0BFC      	DECFSZ     R12, 1
0x02EB	0x2AE8      	GOTO       L_main55
0x02EC	0x0BFB      	DECFSZ     R11, 1
0x02ED	0x2AE8      	GOTO       L_main55
0x02EE	0x0000      	NOP
L_main54:
;FinalProject.c,110 :: 		for(count = 3 ; count >= 0 ; count --)
0x02EF	0x3001      	MOVLW      1
0x02F0	0x02BA      	SUBWF      _count, 1
0x02F1	0x1C03      	BTFSS      STATUS, 0
0x02F2	0x03BB      	DECF       _count+1, 1
;FinalProject.c,116 :: 		}
0x02F3	0x2AD0      	GOTO       L_main51
L_main52:
;FinalProject.c,117 :: 		south = !south;
0x02F4	0x0834      	MOVF       _south, 0
0x02F5	0x0435      	IORWF      _south+1, 0
0x02F6	0x3001      	MOVLW      1
0x02F7	0x1D03      	BTFSS      STATUS, 2
0x02F8	0x3000      	MOVLW      0
0x02F9	0x00B4      	MOVWF      _south
0x02FA	0x00B5      	MOVWF      _south+1
0x02FB	0x3000      	MOVLW      0
0x02FC	0x00B5      	MOVWF      _south+1
;FinalProject.c,118 :: 		}
L_main48:
;FinalProject.c,119 :: 		}
0x02FD	0x2B38      	GOTO       L_main56
L_main47:
;FinalProject.c,122 :: 		leds = 0b00110000;                                                  //Run west street
0x02FE	0x3030      	MOVLW      48
0x02FF	0x0086      	MOVWF      PORTB
;FinalProject.c,123 :: 		if(porta.B4)
0x0300	0x1E05      	BTFSS      PORTA, 4
0x0301	0x2B38      	GOTO       L_main57
;FinalProject.c,125 :: 		while(porta.B4);
L_main58:
0x0302	0x1E05      	BTFSS      PORTA, 4
0x0303	0x2B05      	GOTO       L_main59
0x0304	0x2B02      	GOTO       L_main58
L_main59:
;FinalProject.c,126 :: 		SEG_E = 0b00011;                                                //Enable west street segments
0x0305	0x3003      	MOVLW      3
0x0306	0x0085      	MOVWF      PORTA
;FinalProject.c,127 :: 		for(count = 3 ; count >= 0 ; count --)
0x0307	0x3003      	MOVLW      3
0x0308	0x00BA      	MOVWF      _count
0x0309	0x3000      	MOVLW      0
0x030A	0x00BB      	MOVWF      _count+1
L_main60:
0x030B	0x3080      	MOVLW      128
0x030C	0x063B      	XORWF      _count+1, 0
0x030D	0x00F0      	MOVWF      R0
0x030E	0x3080      	MOVLW      128
0x030F	0x0270      	SUBWF      R0, 0
0x0310	0x1D03      	BTFSS      STATUS, 2
0x0311	0x2B14      	GOTO       L__main87
0x0312	0x3000      	MOVLW      0
0x0313	0x023A      	SUBWF      _count, 0
L__main87:
0x0314	0x1C03      	BTFSS      STATUS, 0
0x0315	0x2B2F      	GOTO       L_main61
;FinalProject.c,129 :: 		west_Seg = count;                                          //Yellow LED counter(west)
0x0316	0x083A      	MOVF       _count, 0
0x0317	0x0088      	MOVWF      PORTD
;FinalProject.c,130 :: 		westFlasher();
0x0318	0x20C1      	CALL       _WestFlasher
;FinalProject.c,131 :: 		if(count)
0x0319	0x083A      	MOVF       _count, 0
0x031A	0x043B      	IORWF      _count+1, 0
0x031B	0x1903      	BTFSC      STATUS, 2
0x031C	0x2B2A      	GOTO       L_main63
;FinalProject.c,132 :: 		delay_ms(wait600);
0x031D	0x3007      	MOVLW      7
0x031E	0x00FB      	MOVWF      R11
0x031F	0x3017      	MOVLW      23
0x0320	0x00FC      	MOVWF      R12
0x0321	0x306A      	MOVLW      106
0x0322	0x00FD      	MOVWF      R13
L_main64:
0x0323	0x0BFD      	DECFSZ     R13, 1
0x0324	0x2B23      	GOTO       L_main64
0x0325	0x0BFC      	DECFSZ     R12, 1
0x0326	0x2B23      	GOTO       L_main64
0x0327	0x0BFB      	DECFSZ     R11, 1
0x0328	0x2B23      	GOTO       L_main64
0x0329	0x0000      	NOP
L_main63:
;FinalProject.c,127 :: 		for(count = 3 ; count >= 0 ; count --)
0x032A	0x3001      	MOVLW      1
0x032B	0x02BA      	SUBWF      _count, 1
0x032C	0x1C03      	BTFSS      STATUS, 0
0x032D	0x03BB      	DECF       _count+1, 1
;FinalProject.c,133 :: 		}
0x032E	0x2B0B      	GOTO       L_main60
L_main61:
;FinalProject.c,134 :: 		south = !south;
0x032F	0x0834      	MOVF       _south, 0
0x0330	0x0435      	IORWF      _south+1, 0
0x0331	0x3001      	MOVLW      1
0x0332	0x1D03      	BTFSS      STATUS, 2
0x0333	0x3000      	MOVLW      0
0x0334	0x00B4      	MOVWF      _south
0x0335	0x00B5      	MOVWF      _south+1
0x0336	0x3000      	MOVLW      0
0x0337	0x00B5      	MOVWF      _south+1
;FinalProject.c,135 :: 		}
L_main57:
;FinalProject.c,136 :: 		}
L_main56:
;FinalProject.c,137 :: 		if(manual)
0x0338	0x1C06      	BTFSS      PORTB, 0
0x0339	0x2B3B      	GOTO       L_main65
;FinalProject.c,138 :: 		goto Manual;
0x033A	0x2ABA      	GOTO       ___main_Manual
L_main65:
;FinalProject.c,140 :: 		goto Automatic;
0x033B	0x292E      	GOTO       ___main_Automatic
;FinalProject.c,141 :: 		}
L_end_main:
0x033C	0x2B3C      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [21]    _interrupt
0x0019       [7]    _____DoICP
0x0020      [44]    _Div_16x16_S_L
0x004C     [105]    _Div_16x16_S
0x00B5      [12]    ___CC2DW
0x00C1      [23]    _WestFlasher
0x00D8      [23]    _SouthFlasher
0x00EF     [590]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [0]    INTF_bit
0x000B       [0]    GIE_bit
0x000B       [0]    INTE_bit
0x0020      [20]    _tens
0x0034       [2]    _south
0x0036       [2]    ___DoICPAddr
0x0038       [2]    _delay
0x003A       [2]    _count
0x003C       [1]    ___savePCLATH
0x003D       [1]    ___saveSTATUS
0x003E       [2]    FLOC__main
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    INTEDG_bit
0x0081       [0]    NOT_RBPU_bit
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x009F       [1]    ADCON1
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_WestFlasher1
  L_WestFlasher2
  L_SouthFlasher3
  L_SouthFlasher4
  L_main5
  ___main_Manual
  L_main6
  ___main_Automatic
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L__main67
  L__main68
  L__main69
  L__main70
  L_end_interrupt
  _interrupt
  L__interrupt72
  L_end_WestFlasher
  _WestFlasher
  L_end_SouthFlasher
  _SouthFlasher
  L_end_main
  _main
  L__main76
  L__main77
  L__main78
  L__main79
  L__main80
  L__main81
  L__main82
  L__main83
  L__main84
  L__main85
  L__main86
  L__main87
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8X8_U
  _Mul_8X8_U
  L_end_Mul_16X16_U
  _Mul_16X16_U
  L_end_Div_8X8_U
  _Div_8X8_U
  L_end_Div_16X16_U
  _Div_16X16_U
  L_end_Mul_8X8_S
  _Mul_8X8_S
  L_end_Mul_16X16_S
  _Mul_16X16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8X8_S
  _Div_8X8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_interrupt0
  L_WestFlasher1
  L_WestFlasher2
  L_SouthFlasher3
  L_SouthFlasher4
  L_main5
  ___main_Manual
  L_main6
  ___main_Automatic
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L__main67
  L__main68
  L__main69
  L__main70
  L_end_interrupt
  _interrupt
  L__interrupt72
  L_end_WestFlasher
  _WestFlasher
  L_end_SouthFlasher
  _SouthFlasher
  L_end_main
  _main
  L__main76
  L__main77
  L__main78
  L__main79
  L__main80
  L__main81
  L__main82
  L__main83
  L__main84
  L__main85
  L__main86
  L__main87
